/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleObjCpp
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */

#import "RNDracoSpec.h"


@implementation NativeDracoSpecBase


- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper
{
  _eventEmitterCallback = std::move(eventEmitterCallbackWrapper->_eventEmitterCallback);
}
@end


namespace facebook::react {
  
    static facebook::jsi::Value __hostFunction_NativeDracoSpecJSI_createDecoderModule(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, ObjectKind, "createDecoderModule", @selector(createDecoderModule), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDracoSpecJSI_createEncoderModule(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, ObjectKind, "createEncoderModule", @selector(createEncoderModule), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDracoSpecJSI_attachPointCloudHandle(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "attachPointCloudHandle", @selector(attachPointCloudHandle:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDracoSpecJSI_attachMeshHandle(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "attachMeshHandle", @selector(attachMeshHandle:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDracoSpecJSI_attachPointAttributeHandle(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "attachPointAttributeHandle", @selector(attachPointAttributeHandle:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDracoSpecJSI_installMeshMethods(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "installMeshMethods", @selector(installMeshMethods:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDracoSpecJSI_installPointCloudMethods(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "installPointCloudMethods", @selector(installPointCloudMethods:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDracoSpecJSI_installPointAttributeMethods(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "installPointAttributeMethods", @selector(installPointAttributeMethods:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDracoSpecJSI_initBuffer(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "initBuffer", @selector(initBuffer:data:length:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDracoSpecJSI_GetEncodedGeometryType_Deprecated(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, NumberKind, "GetEncodedGeometryType_Deprecated", @selector(GetEncodedGeometryType_Deprecated:inBuffer:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDracoSpecJSI_GetAttributeDataArrayForAllPoints(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, BooleanKind, "GetAttributeDataArrayForAllPoints", @selector(GetAttributeDataArrayForAllPoints:pointCloudHandle:pointAttributeHandle:dataType:outSize:outValues:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDracoSpecJSI_SkipAttributeTransform(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "SkipAttributeTransform", @selector(SkipAttributeTransform:attributeType:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDracoSpecJSI_GetAttributeByUniqueId(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, ObjectKind, "GetAttributeByUniqueId", @selector(GetAttributeByUniqueId:pointCloudHandle:uniqueId:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDracoSpecJSI_GetAttributeId(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, NumberKind, "GetAttributeId", @selector(GetAttributeId:attributeType:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDracoSpecJSI_GetAttribute(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, ObjectKind, "GetAttribute", @selector(GetAttribute:pointCloudHandle:attributeId:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDracoSpecJSI_GetTrianglesUInt32Array(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, BooleanKind, "GetTrianglesUInt32Array", @selector(GetTrianglesUInt32Array:meshHandle:outSize:outValues:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDracoSpecJSI_DecodeBufferToPointCloud(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, NumberKind, "DecodeBufferToPointCloud", @selector(DecodeBufferToPointCloud:bufferHandle:pointCloudHandle:), args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDracoSpecJSI_DecodeBufferToMesh(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, NumberKind, "DecodeBufferToMesh", @selector(DecodeBufferToMesh:bufferHandle:meshHandle:), args, count);
    }

  NativeDracoSpecJSI::NativeDracoSpecJSI(const ObjCTurboModule::InitParams &params)
    : ObjCTurboModule(params) {
      
        methodMap_["createDecoderModule"] = MethodMetadata {0, __hostFunction_NativeDracoSpecJSI_createDecoderModule};
        
        
        methodMap_["createEncoderModule"] = MethodMetadata {0, __hostFunction_NativeDracoSpecJSI_createEncoderModule};
        
        
        methodMap_["attachPointCloudHandle"] = MethodMetadata {1, __hostFunction_NativeDracoSpecJSI_attachPointCloudHandle};
        
        
        methodMap_["attachMeshHandle"] = MethodMetadata {1, __hostFunction_NativeDracoSpecJSI_attachMeshHandle};
        
        
        methodMap_["attachPointAttributeHandle"] = MethodMetadata {1, __hostFunction_NativeDracoSpecJSI_attachPointAttributeHandle};
        
        
        methodMap_["installMeshMethods"] = MethodMetadata {1, __hostFunction_NativeDracoSpecJSI_installMeshMethods};
        
        
        methodMap_["installPointCloudMethods"] = MethodMetadata {1, __hostFunction_NativeDracoSpecJSI_installPointCloudMethods};
        
        
        methodMap_["installPointAttributeMethods"] = MethodMetadata {1, __hostFunction_NativeDracoSpecJSI_installPointAttributeMethods};
        
        
        methodMap_["initBuffer"] = MethodMetadata {3, __hostFunction_NativeDracoSpecJSI_initBuffer};
        
        
        methodMap_["GetEncodedGeometryType_Deprecated"] = MethodMetadata {2, __hostFunction_NativeDracoSpecJSI_GetEncodedGeometryType_Deprecated};
        
        
        methodMap_["GetAttributeDataArrayForAllPoints"] = MethodMetadata {6, __hostFunction_NativeDracoSpecJSI_GetAttributeDataArrayForAllPoints};
        
        
        methodMap_["SkipAttributeTransform"] = MethodMetadata {2, __hostFunction_NativeDracoSpecJSI_SkipAttributeTransform};
        
        
        methodMap_["GetAttributeByUniqueId"] = MethodMetadata {3, __hostFunction_NativeDracoSpecJSI_GetAttributeByUniqueId};
        
        
        methodMap_["GetAttributeId"] = MethodMetadata {2, __hostFunction_NativeDracoSpecJSI_GetAttributeId};
        
        
        methodMap_["GetAttribute"] = MethodMetadata {3, __hostFunction_NativeDracoSpecJSI_GetAttribute};
        
        
        methodMap_["GetTrianglesUInt32Array"] = MethodMetadata {4, __hostFunction_NativeDracoSpecJSI_GetTrianglesUInt32Array};
        
        
        methodMap_["DecodeBufferToPointCloud"] = MethodMetadata {3, __hostFunction_NativeDracoSpecJSI_DecodeBufferToPointCloud};
        
        
        methodMap_["DecodeBufferToMesh"] = MethodMetadata {3, __hostFunction_NativeDracoSpecJSI_DecodeBufferToMesh};
        
  }
} // namespace facebook::react
