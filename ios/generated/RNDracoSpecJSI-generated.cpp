/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleCpp.js
 */

#include "RNDracoSpecJSI.h"

namespace facebook::react {

static jsi::Value __hostFunction_NativeDracoCxxSpecJSI_createDecoderModule(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeDracoCxxSpecJSI *>(&turboModule)->createDecoderModule(
    rt
  );
}
static jsi::Value __hostFunction_NativeDracoCxxSpecJSI_createEncoderModule(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeDracoCxxSpecJSI *>(&turboModule)->createEncoderModule(
    rt
  );
}
static jsi::Value __hostFunction_NativeDracoCxxSpecJSI_attachPointCloudHandle(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeDracoCxxSpecJSI *>(&turboModule)->attachPointCloudHandle(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeDracoCxxSpecJSI_attachMeshHandle(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeDracoCxxSpecJSI *>(&turboModule)->attachMeshHandle(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeDracoCxxSpecJSI_attachPointAttributeHandle(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeDracoCxxSpecJSI *>(&turboModule)->attachPointAttributeHandle(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeDracoCxxSpecJSI_installMeshMethods(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeDracoCxxSpecJSI *>(&turboModule)->installMeshMethods(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeDracoCxxSpecJSI_installPointCloudMethods(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeDracoCxxSpecJSI *>(&turboModule)->installPointCloudMethods(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeDracoCxxSpecJSI_installPointAttributeMethods(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeDracoCxxSpecJSI *>(&turboModule)->installPointAttributeMethods(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeDracoCxxSpecJSI_initBuffer(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeDracoCxxSpecJSI *>(&turboModule)->initBuffer(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt),
    count <= 2 ? throw jsi::JSError(rt, "Expected argument in position 2 to be passed") : args[2].asNumber()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeDracoCxxSpecJSI_GetEncodedGeometryType_Deprecated(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeDracoCxxSpecJSI *>(&turboModule)->GetEncodedGeometryType_Deprecated(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeDracoCxxSpecJSI_GetAttributeDataArrayForAllPoints(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeDracoCxxSpecJSI *>(&turboModule)->GetAttributeDataArrayForAllPoints(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt),
    count <= 2 ? throw jsi::JSError(rt, "Expected argument in position 2 to be passed") : args[2].asObject(rt),
    count <= 3 ? throw jsi::JSError(rt, "Expected argument in position 3 to be passed") : args[3].asNumber(),
    count <= 4 ? throw jsi::JSError(rt, "Expected argument in position 4 to be passed") : args[4].asNumber(),
    count <= 5 ? throw jsi::JSError(rt, "Expected argument in position 5 to be passed") : args[5].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeDracoCxxSpecJSI_SkipAttributeTransform(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeDracoCxxSpecJSI *>(&turboModule)->SkipAttributeTransform(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asNumber()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeDracoCxxSpecJSI_GetAttributeByUniqueId(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeDracoCxxSpecJSI *>(&turboModule)->GetAttributeByUniqueId(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt),
    count <= 2 ? throw jsi::JSError(rt, "Expected argument in position 2 to be passed") : args[2].asNumber()
  );
}
static jsi::Value __hostFunction_NativeDracoCxxSpecJSI_GetAttributeId(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeDracoCxxSpecJSI *>(&turboModule)->GetAttributeId(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asNumber()
  );
}
static jsi::Value __hostFunction_NativeDracoCxxSpecJSI_GetAttribute(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeDracoCxxSpecJSI *>(&turboModule)->GetAttribute(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt),
    count <= 2 ? throw jsi::JSError(rt, "Expected argument in position 2 to be passed") : args[2].asNumber()
  );
}
static jsi::Value __hostFunction_NativeDracoCxxSpecJSI_GetTrianglesUInt32Array(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeDracoCxxSpecJSI *>(&turboModule)->GetTrianglesUInt32Array(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt),
    count <= 2 ? throw jsi::JSError(rt, "Expected argument in position 2 to be passed") : args[2].asNumber(),
    count <= 3 ? throw jsi::JSError(rt, "Expected argument in position 3 to be passed") : args[3].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeDracoCxxSpecJSI_DecodeBufferToPointCloud(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeDracoCxxSpecJSI *>(&turboModule)->DecodeBufferToPointCloud(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt),
    count <= 2 ? throw jsi::JSError(rt, "Expected argument in position 2 to be passed") : args[2].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeDracoCxxSpecJSI_DecodeBufferToMesh(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeDracoCxxSpecJSI *>(&turboModule)->DecodeBufferToMesh(
    rt,
    count <= 0 ? throw jsi::JSError(rt, "Expected argument in position 0 to be passed") : args[0].asObject(rt),
    count <= 1 ? throw jsi::JSError(rt, "Expected argument in position 1 to be passed") : args[1].asObject(rt),
    count <= 2 ? throw jsi::JSError(rt, "Expected argument in position 2 to be passed") : args[2].asObject(rt)
  );
}

NativeDracoCxxSpecJSI::NativeDracoCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
  : TurboModule("Draco", jsInvoker) {
  methodMap_["createDecoderModule"] = MethodMetadata {0, __hostFunction_NativeDracoCxxSpecJSI_createDecoderModule};
  methodMap_["createEncoderModule"] = MethodMetadata {0, __hostFunction_NativeDracoCxxSpecJSI_createEncoderModule};
  methodMap_["attachPointCloudHandle"] = MethodMetadata {1, __hostFunction_NativeDracoCxxSpecJSI_attachPointCloudHandle};
  methodMap_["attachMeshHandle"] = MethodMetadata {1, __hostFunction_NativeDracoCxxSpecJSI_attachMeshHandle};
  methodMap_["attachPointAttributeHandle"] = MethodMetadata {1, __hostFunction_NativeDracoCxxSpecJSI_attachPointAttributeHandle};
  methodMap_["installMeshMethods"] = MethodMetadata {1, __hostFunction_NativeDracoCxxSpecJSI_installMeshMethods};
  methodMap_["installPointCloudMethods"] = MethodMetadata {1, __hostFunction_NativeDracoCxxSpecJSI_installPointCloudMethods};
  methodMap_["installPointAttributeMethods"] = MethodMetadata {1, __hostFunction_NativeDracoCxxSpecJSI_installPointAttributeMethods};
  methodMap_["initBuffer"] = MethodMetadata {3, __hostFunction_NativeDracoCxxSpecJSI_initBuffer};
  methodMap_["GetEncodedGeometryType_Deprecated"] = MethodMetadata {2, __hostFunction_NativeDracoCxxSpecJSI_GetEncodedGeometryType_Deprecated};
  methodMap_["GetAttributeDataArrayForAllPoints"] = MethodMetadata {6, __hostFunction_NativeDracoCxxSpecJSI_GetAttributeDataArrayForAllPoints};
  methodMap_["SkipAttributeTransform"] = MethodMetadata {2, __hostFunction_NativeDracoCxxSpecJSI_SkipAttributeTransform};
  methodMap_["GetAttributeByUniqueId"] = MethodMetadata {3, __hostFunction_NativeDracoCxxSpecJSI_GetAttributeByUniqueId};
  methodMap_["GetAttributeId"] = MethodMetadata {2, __hostFunction_NativeDracoCxxSpecJSI_GetAttributeId};
  methodMap_["GetAttribute"] = MethodMetadata {3, __hostFunction_NativeDracoCxxSpecJSI_GetAttribute};
  methodMap_["GetTrianglesUInt32Array"] = MethodMetadata {4, __hostFunction_NativeDracoCxxSpecJSI_GetTrianglesUInt32Array};
  methodMap_["DecodeBufferToPointCloud"] = MethodMetadata {3, __hostFunction_NativeDracoCxxSpecJSI_DecodeBufferToPointCloud};
  methodMap_["DecodeBufferToMesh"] = MethodMetadata {3, __hostFunction_NativeDracoCxxSpecJSI_DecodeBufferToMesh};
}


} // namespace facebook::react
